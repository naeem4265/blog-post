name: CI/CD Pipeline

on:
  release:
    types: [published]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/todo-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/todo-frontend

jobs:
  docker-build-push:
    runs-on: self-hosted   # instead of ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build & Push Backend
        run: |
          docker build -t $BACKEND_IMAGE:${{ env.RELEASE_VERSION }} ./backend
          docker push $BACKEND_IMAGE:${{ env.RELEASE_VERSION }}

      - name: Build & Push Frontend
        run: |
          docker build -t $FRONTEND_IMAGE:${{ env.RELEASE_VERSION }} ./frontend
          docker push $FRONTEND_IMAGE:${{ env.RELEASE_VERSION }}

      - name: Deploy locally with Docker Compose
        run: |
          # Write updated RELEASE_VERSION into .env
          sed -i "s/^RELEASE_VERSION=.*/RELEASE_VERSION=${{ env.RELEASE_VERSION }}/" .env || echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> .env
          
          # Confirm .env
          echo "Updated .env:"
          cat .env

          # Pull and restart services
          docker compose pull
          docker compose up -d
